@page "/accounts/create"
@using Microsoft.Data.SqlClient
@using Microsoft.EntityFrameworkCore
@using AuthAPI.Models
@inject IDbContextFactory<AuthAPI.Data.AuthAPIContext> DbFactory
@inject NavigationManager NavigationManager
@inject AuthAPI.Services.DatabaseService DatabaseService

<PageTitle>Create</PageTitle>

<p>@message</p>

<h1>Create</h1>

<h2>Account</h2>
<hr />
<div class="row">
	<div class="col-md-4">
		<EditForm method="post" Model="Account" OnValidSubmit="SaveData" FormName="create" Enhance>
			<DataAnnotationsValidator />
			<ValidationSummary class="text-danger" />
			<div class="mb-3">
				<label for="username" class="form-label">Username:</label>
				<InputText id="username" @bind-Value="Account.Username" class="form-control" />
				<ValidationMessage For="() => Account.Username" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="password" class="form-label">Password:</label>
				<InputText id="password" @bind-Value="Account.Password" class="form-control" />
				<ValidationMessage For="() => Account.Password" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="email" class="form-label">Email:</label>
				<InputText id="email" @bind-Value="Account.Email" class="form-control" />
				<ValidationMessage For="() => Account.Email" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="firstname" class="form-label">FirstName:</label>
				<InputText id="firstname" @bind-Value="Account.FirstName" class="form-control" />
				<ValidationMessage For="() => Account.FirstName" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="lastname" class="form-label">LastName:</label>
				<InputText id="lastname" @bind-Value="Account.LastName" class="form-control" />
				<ValidationMessage For="() => Account.LastName" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="firstline" class="form-label">FirstLine:</label>
				<InputText id="firstline" @bind-Value="MemberAddress.FirstLine" class="form-control" />
				<ValidationMessage For="() => MemberAddress.FirstLine" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="secondline" class="form-label">SecondLine:</label>
				<InputText id="secondline" @bind-Value="MemberAddress.SecondLine" class="form-control" />
				<ValidationMessage For="() => MemberAddress.SecondLine" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="thirdline" class="form-label">ThirdLine:</label>
				<InputText id="thirdline" @bind-Value="MemberAddress.ThirdLine" class="form-control" />
				<ValidationMessage For="() => MemberAddress.ThirdLine" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="fourthline" class="form-label">FourthLine:</label>
				<InputText id="fourthline" @bind-Value="MemberAddress.FourthLine" class="form-control" />
				<ValidationMessage For="() => MemberAddress.FourthLine" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="city" class="form-label">City:</label>
				<InputText id="city" @bind-Value="MemberAddress.City" class="form-control" />
				<ValidationMessage For="() => MemberAddress.City" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="county" class="form-label">County:</label>
				<InputText id="county" @bind-Value="MemberAddress.County" class="form-control" />
				<ValidationMessage For="() => MemberAddress.County" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="country" class="form-label">Country:</label>
				<InputText id="country" @bind-Value="MemberAddress.Country" class="form-control" />
				<ValidationMessage For="() => MemberAddress.Country" class="text-danger" />
			</div>
			<div class="mb-3">
				<label for="postcode" class="form-label">PostCode:</label>
				<InputText id="postcode" @bind-Value="MemberAddress.PostCode" class="form-control" />
				<ValidationMessage For="() => MemberAddress.PostCode" class="text-danger" />
			</div>
			<button type="submit" class="btn btn-primary">Create</button>
		</EditForm>
	</div>
</div>

<div>
	<a href="/accounts">Back to List</a>
</div>

@code {
	[SupplyParameterFromForm]
	private MemberAddress MemberAddress { get; set; } = new();
	[SupplyParameterFromForm]
	private Account Account { get; set; } = new();

	//Message field to display result during development
	private string message = string.Empty;

	private void SaveData()
	{
		MemberAddress memberAddress = new MemberAddress();
		Account account = new Account();

		memberAddress.FirstLine = MemberAddress.FirstLine;
		memberAddress.SecondLine = MemberAddress.SecondLine;
		memberAddress.ThirdLine = MemberAddress.ThirdLine;
		memberAddress.FourthLine = MemberAddress.FourthLine;
		memberAddress.City = MemberAddress.City;
		memberAddress.County = MemberAddress.County;
		memberAddress.Country = MemberAddress.Country;
		memberAddress.PostCode = MemberAddress.PostCode;

		string result = DatabaseService.CreateMemberAddress(memberAddress);

		int addressID = -1;

		if (!int.TryParse(result, out addressID))
		{
			//ERROR CREATING ADDRESS RECORD, FOR NOW DISPLAY ERROR BUT HANDLE PROPERLY
			message = result;
			return;
		}

		if(addressID == -1)
		{
			//just in case addressID doesn't get assigned we return rather than save a user with an incorrect address
			return;
		}

		account.AddressID = addressID;
		account.Username = Account.Username;
		account.Password = Account.Password;
		account.Email = Account.Email;
		account.FirstName = Account.FirstName;
		account.LastName = Account.LastName;

		message = DatabaseService.CreateMemberUser(account);
	}
}
