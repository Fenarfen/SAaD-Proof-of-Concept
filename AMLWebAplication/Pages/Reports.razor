@page "/reports"
@using AMLWebAplication.Data
@using AMLWebAplication.Services
@inject IMediaLoanService MediaLoanService

<h3>Active Loans</h3>

@if (activeLoans == null)
{
    <p><em>Loading...</em></p>
}
else if (!activeLoans.Any())
{
    <p>No active loans.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Media ID</th>
                <th>Account ID</th>
                <th>Branch ID</th>
                <th>Loaned Date</th>
                <th>Due Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in activeLoans)
            {
                <tr>
                    <td>@loan.MediaID</td>
                    <td>@loan.AccountID</td>
                    <td>@loan.BranchID</td>
                    <td>@loan.LoanedDate</td>
                    <td>@loan.DueDate</td>
                    <td>@loan.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Loans by Account</h3>

<div class="mb-3">
    <input type="number" @bind="accountId" placeholder="Enter Account ID" />
    <button class="btn btn-primary ms-2" @onclick="LoadLoansAndUpdateTable">Search</button>
</div>

@if (accountLoans == null)
{
    <p><em>Loading...</em></p>
}
else if (!accountLoans.Any())
{
    <p>No active loans.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Media ID</th>
                <th>Account ID</th>
                <th>Branch ID</th>
                <th>Loaned Date</th>
                <th>Due Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in accountLoans)
            {
                <tr>
                    <td>@loan.MediaID</td>
                    <td>@loan.AccountID</td>
                    <td>@loan.BranchID</td>
                    <td>@loan.LoanedDate</td>
                    <td>@loan.DueDate</td>
                    <td>@loan.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Overdue Loans</h3>

@if (overdueLoans == null)
{
    <p>Loading overdue loans...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Media ID</th>
                <th>Account ID</th>
                <th>Loaned Date</th>
                <th>Due Date</th>
                <th>Returned Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in overdueLoans)
            {
                <tr>
                    <td>@loan.MediaID</td>
                    <td>@loan.AccountID</td>
                    <td>@loan.LoanedDate.ToShortDateString()</td>
                    <td>@loan.DueDate.ToShortDateString()</td>
                    <td>@loan.ReturnedDate?.ToShortDateString() ?? "Not Returned"</td>
                    <td>@(loan.Status ?? "Overdue")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<MediaLoan> activeLoans;
    private IEnumerable<MediaLoan> accountLoans;
    private IEnumerable<MediaLoan> overdueLoans;
    private int accountId = 1; // HARDCODED CHANGE
    private List<MediaLoan> loans;

    protected override async Task OnInitializedAsync()
    {
        activeLoans = await MediaLoanService.GetActiveLoansAsync();
        overdueLoans = await MediaLoanService.GetOverdueLoansAsync();
        @* accountLoans = await MediaLoanService.GetLoansByAccountAsync(accountId); *@
        await LoadLoansAndUpdateTable();
    }

    private async Task LoadLoansAndUpdateTable()
    {
        Console.WriteLine("activated");
        accountLoans = await MediaLoanService.GetLoansByAccountAsync(accountId);
        StateHasChanged();
    }
}