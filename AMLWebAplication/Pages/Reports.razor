@page "/reports"
@using AMLWebAplication.Data
@using AMLWebAplication.Services
@inject IMediaLoanService MediaLoanService

<h3>Branch Report</h3>

<div>
    <label>Branch ID: </label>
    <input type="number" @bind="branchId" />

    <label>Start Date: </label>
    <input type="date" @bind="startDate" />

    <label>End Date: </label>
    <input type="date" @bind="endDate" />

    <button @onclick="GenerateReport">Generate Report</button>
</div>

@if (branchReport != null)
{
    <h4>Report for Branch @branchReport.BranchId</h4>
    <p>From: @branchReport.StartDate.ToShortDateString() To: @branchReport.EndDate.ToShortDateString()</p>

    <h5>Borrowing Statistics</h5>
    <table class="table">
        <thead>
            <tr>
                <th>Total Loans</th>
                <th>Unique Users</th>
                <th>Overdue Loans</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@branchReport.BorrowingStats.TotalLoans</td>
                <td>@branchReport.BorrowingStats.UniqueUsers</td>
                <td>@branchReport.BorrowingStats.OverdueLoans</td>
            </tr>
        </tbody>
    </table>

    <h5>Popular Media Items</h5>
    <table class="table">
        <thead>
            <tr>
                <th>Media ID</th>
                <th>Title</th>
                <th>Loan Count</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in branchReport.PopularItems)
            {
                <tr>
                    <td>@item.MediaId</td>
                    <td>@item.Title</td>
                    <td>@item.LoanCount</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (loading)
{
    <p>Loading report...</p>
}
else if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}

<h3>Loans by Account.</h3>
<div class="mb-3">
    <input type="text" @bind-Value="accountId" @bind-Value:event="ValueChanged" />
    <button class="btn btn-primary ms-2" @onclick="LoadLoansAndUpdateTableAsync">Search</button>
</div>
@if (accountLoans == null)
{
    <p><em>Loading...</em></p>
}
else if (!accountLoans.Any())
{
    <p>No active loans.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Media ID</th>
                <th>Account ID</th>
                <th>Branch ID</th>
                <th>Loaned Date</th>
                <th>Due Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in accountLoans)
            {
                <tr>
                    <td>@loan.MediaID</td>
                    <td>@loan.AccountID</td>
                    <td>@loan.BranchID</td>
                    <td>@loan.LoanedDate</td>
                    <td>@loan.DueDate</td>
                    <td>@loan.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Active Loans</h3>

@if (activeLoans == null)
{
    <p><em>Loading...</em></p>
}
else if (!activeLoans.Any())
{
    <p>No active loans.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Media ID</th>
                <th>Account ID</th>
                <th>Branch ID</th>
                <th>Loaned Date</th>
                <th>Due Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in activeLoans)
            {
                <tr>
                    <td>@loan.MediaID</td>
                    <td>@loan.AccountID</td>
                    <td>@loan.BranchID</td>
                    <td>@loan.LoanedDate</td>
                    <td>@loan.DueDate</td>
                    <td>@loan.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Overdue Loans</h3>

@if (overdueLoans == null)
{
    <p>Loading overdue loans...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Media ID</th>
                <th>Account ID</th>
                <th>Loaned Date</th>
                <th>Due Date</th>
                <th>Returned Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in overdueLoans)
            {
                <tr>
                    <td>@loan.MediaID</td>
                    <td>@loan.AccountID</td>
                    <td>@loan.LoanedDate.ToShortDateString()</td>
                    <td>@loan.DueDate.ToShortDateString()</td>
                    <td>@loan.ReturnedDate?.ToShortDateString() ?? "Not Returned"</td>
                    <td>@(loan.Status ?? "Overdue")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<MediaLoan> activeLoans;
    private IEnumerable<MediaLoan> accountLoans;
    private IEnumerable<MediaLoan> overdueLoans;
    private int accountId = 1; // HARDCODED CHANGE
    private List<MediaLoan> loans;
    private int branchId;
    private DateTime startDate;
    private DateTime endDate;
    private BranchReport branchReport;
    private bool loading = false;
    private string errorMessage;

    private async Task GenerateReport()
    {
        loading = true;
        errorMessage = null;
        try
        {
            branchReport = await MediaLoanService.GetBranchReportAsync(branchId, startDate, endDate);
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load report: {ex.Message}";
        }
        finally
        {
            loading = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        activeLoans = await MediaLoanService.GetActiveLoansAsync();
        overdueLoans = await MediaLoanService.GetOverdueLoansAsync();
        accountLoans = await MediaLoanService.GetLoansByAccountAsync(accountId);
        await LoadLoansAndUpdateTableAsync();
    }

    private async Task LoadLoansAndUpdateTableAsync()
    {
        Console.WriteLine("activated");
        accountLoans = await MediaLoanService.GetLoansByAccountAsync(accountId);
        StateHasChanged();
    }
}