@using AMLWebAplication.Services
@using Microsoft.AspNetCore.Authorization
@inject APIAuthenticationService AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">AMLWebAplication</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        
        @if (!isAuthenticated)
        {
            <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Login">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Login
            </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Search">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Search Media
            </NavLink>
        </div>

        @if (isAdmin)
        {
            <div class="nav-item px-3">

                <NavLink class="nav-link" href="/reports">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Reports
                </NavLink>

            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/monitorsystem">

                    <span class="oi oi-monitor" aria-hidden="true"></span> Monitor System
                </NavLink>
            </div>
        }
        
        @if (isManager)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Transfer">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Transfer Media
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    public bool isAuthenticated { get; set; }

    public bool isAdmin { get; set; }
    public bool isManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;

        if (authState.User.Identity.IsAuthenticated)
        {
            isAuthenticated = true;

            isManager = authState.User.IsInRole("Manager");
            isAdmin = authState.User.IsInRole("Admin");
            StateHasChanged();
        }
    }
}

